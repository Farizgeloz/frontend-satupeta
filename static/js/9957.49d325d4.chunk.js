"use strict";(self.webpackChunkopendata_backend_prabulinggih=self.webpackChunkopendata_backend_prabulinggih||[]).push([[9957],{89957:(e,t,n)=>{n.r(t),n.d(t,{invokeGeometryOp:()=>s});var i=n(37055),a=n(19902);function r(e,t){let n;return{loaded:!1,load:()=>null!==n&&void 0!==n?n:n=t().then(t=>{o[e]={loaded:!0,execute:t}})}}function c(e){return null==e?null:e.toJSON()}const o={disjoint:r("disjoint",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(8242)]).then(n.bind(n,80352)).then(e=>e.execute)),intersects:r("intersects",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(2268)]).then(n.bind(n,95838)).then(e=>e.execute)),touches:r("touches",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(8691)]).then(n.bind(n,66521)).then(e=>e.execute)),crosses:r("crosses",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(1216)]).then(n.bind(n,56050)).then(e=>e.execute)),within:r("within",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(8045)]).then(n.bind(n,51475)).then(e=>e.execute)),contains:r("contains",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(863)]).then(n.bind(n,27353)).then(e=>e.execute)),overlaps:r("overlaps",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(8458)]).then(n.bind(n,34744)).then(e=>e.execute)),equals:r("equals",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(24)]).then(n.bind(n,72442));return(t,n)=>e.execute((0,a.rS)(t),(0,a.rS)(n))}),relate:r("relate",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(7284)]).then(n.bind(n,16358));return(t,n,i)=>e.execute((0,a.rS)(t),(0,a.rS)(n),i)}),intersection:r("intersection",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(3477)]).then(n.bind(n,33477)).then(e=>e.execute)),union:r("union",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(8673)]).then(n.bind(n,8673)).then(e=>e.executeMany)),difference:r("difference",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(7568)]).then(n.bind(n,27568));return(t,n)=>c(e.execute((0,a.rS)(t),(0,a.rS)(n)))}),symmetricDifference:r("symmetricDifference",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(3083)]).then(n.bind(n,83083));return(t,n)=>c(e.execute((0,a.rS)(t),(0,a.rS)(n)))}),clip:r("clip",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(265)]).then(n.bind(n,265));return(t,n)=>c(e.execute((0,a.rS)(t),(0,a.rS)(n)))}),cut:r("cut",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(4855)]).then(n.bind(n,34855));return(t,n)=>e.execute((0,a.rS)(t),(0,a.rS)(n)).map(e=>c(e))}),area:r("area",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(9760)]).then(n.bind(n,84866)),{convertFromSpatialReferenceUnit:t,toAreaUnit:i}=await n.e(1802).then(n.bind(n,41802));return(n,r)=>{const c=e.execute((0,a.rS)(n));return t(n.spatialReference,i(r),c)}}),geodeticArea:r("geodeticArea",async()=>{const e=await n.e(4392).then(n.bind(n,4392)),{convert:t,squareMeters:i,toAreaUnit:r}=await n.e(1802).then(n.bind(n,41802));return await e.load(),(n,c,o)=>{const s=e.execute((0,a.rS)(n),{curveType:o});return t(i,r(c),s)}}),length:r("length",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(6942)]).then(n.bind(n,67644)),{convertFromSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1802).then(n.bind(n,41802));return(n,a)=>{const r=e.execute(n);return t(n.spatialReference,i(a),r)}}),geodeticLength:r("geodeticLength",async()=>{const e=await n.e(5925).then(n.bind(n,25925)),{convert:t,meters:i,toLengthUnit:r}=await n.e(1802).then(n.bind(n,41802));return await e.load(),(n,c,o)=>{const s=e.execute((0,a.rS)(n),{curveType:o});return t(i,r(c),s)}}),distance:r("distance",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(1010),n.e(5744)]).then(n.bind(n,55744)),{convertFromSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1802).then(n.bind(n,41802));return(n,r,c)=>{const o=e.execute((0,a.rS)(n),(0,a.rS)(r));return t(n.spatialReference,i(c),o)}}),densify:r("densify",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(8609)]).then(n.bind(n,8609)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1802).then(n.bind(n,41802));return(n,r,o)=>(r=t(i(o),n.spatialReference,r),c(e.execute((0,a.rS)(n),r)))}),geodeticDensify:r("geodeticDensify",async()=>{const e=await n.e(1707).then(n.bind(n,51707)),{convert:t,meters:i,toLengthUnit:r}=await n.e(1802).then(n.bind(n,41802));return await e.load(),(n,o,s,l)=>(o=t(r(s),i,o),c(e.execute((0,a.rS)(n),o,{curveType:l})))}),generalize:r("generalize",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(1373)]).then(n.bind(n,41373)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1802).then(n.bind(n,41802));return(n,r,o,s)=>(r=t(i(o),n.spatialReference,r),c(e.execute((0,a.rS)(n),r,s)))}),buffer:r("buffer",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(9674),n.e(4072)]).then(n.bind(n,65238)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1802).then(n.bind(n,41802));return(n,a,r)=>(a=t(i(r),n.spatialReference,a),e.execute(n,a))}),geodesicBuffer:r("geodesicBuffer",async()=>{const e=await n.e(3749).then(n.bind(n,33749)),{convert:t,meters:i,toLengthUnit:a}=await n.e(1802).then(n.bind(n,41802));return await e.load(),(n,r,c,o)=>(r=t(a(c),i,r),e.execute(n,r,{curveType:o}))}),offset:r("offset",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(8635)]).then(n.bind(n,98635)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(1802).then(n.bind(n,41802));return(n,a,r,c)=>(a=t(i(r),n.spatialReference,a),e.execute(n,a,c))}),rotate:r("rotate",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(9678)]).then(n.bind(n,49678)),{default:t}=await Promise.all([n.e(6871),n.e(6364),n.e(5178)]).then(n.bind(n,85178));return(n,i,r,o)=>{const s=(new t).rotate(i,r,o);return c(e.execute((0,a.rS)(n),s))}}),centroid:r("centroid",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(6221)]).then(n.bind(n,82931));return t=>c(e.execute((0,a.rS)(t)))}),labelPoint:r("labelPoint",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(135),n.e(9493)]).then(n.bind(n,53903));return t=>c(e.execute((0,a.rS)(t)))}),simplify:r("simplify",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(7979)]).then(n.bind(n,37979)).then(e=>e.execute)),isSelfIntersecting:r("isSelfIntersecting",async()=>{const{NonSimpleResult:e}=await n.e(5273).then(n.bind(n,15273)),t=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(7948)]).then(n.bind(n,27948)),i=new Set([5,6,7,10,11,12]);return n=>{const r=new e;return!t.isSimple((0,a.rS)(n),r)&&i.has(r.m_reason)}}),isSimple:r("isSimple",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(7979)]).then(n.bind(n,37979)).then(e=>e.isSimple)),convexHull:r("convexHull",()=>Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(6048)]).then(n.bind(n,56048)).then(e=>e.execute)),getNearestCoordinate:r("getNearestCoordinate",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(9032)]).then(n.bind(n,50554));return(t,n,r)=>{const o=e.getNearestCoordinate((0,a.rS)(t),(0,a.rS)(n),r);return(0,i.A)((0,i.A)({},o),{},{coordinate:c(o.coordinate)})}}),getNearestVertex:r("getNearestVertex",async()=>{const e=await Promise.all([n.e(6871),n.e(6364),n.e(2103),n.e(426),n.e(9032)]).then(n.bind(n,50554));return(t,n)=>{const r=e.getNearestVertex((0,a.rS)(t),(0,a.rS)(n));return(0,i.A)((0,i.A)({},r),{},{coordinate:c(r.coordinate)})}})};function s(e,t){const n=o[e];return n.loaded?n.execute.apply(void 0,t):n.load().then(()=>s(e,t))}}}]);
//# sourceMappingURL=9957.49d325d4.chunk.js.map
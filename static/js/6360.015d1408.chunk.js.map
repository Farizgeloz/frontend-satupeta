{"version":3,"file":"static/js/6360.015d1408.chunk.js","mappings":"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","sources":["../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/composed-offset-position/dist/composed-offset-position.browser.min.mjs","../node_modules/@esri/calcite-components/dist/chunks/floating-ui.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/now.js","../node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/lodash-es/_baseTrim.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/debounce.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/dist/chunks/openCloseComponent.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => getSideAxis(d.placement) === initialSideAxis ? d.overflows[0] > 0 : true)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nconst originSides = /*#__PURE__*/new Set(['left', 'top']);\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = originSides.has(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = originSides.has(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle as getComputedStyle$1, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle$1(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll) {\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - getWindowScrollBarX(documentElement, htmlRect);\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Safety check: ensure the scrollbar space is reasonable in case this\n// calculation is affected by unusual styles.\n// Most scrollbars leave 15-18px of space.\nconst SCROLLBAR_MAX = 25;\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  const windowScrollbarX = getWindowScrollBarX(html);\n  // <html> `overflow: hidden` + `scrollbar-gutter: stable` reduces the\n  // visual width of the <html> but this is not considered in the size\n  // of `html.clientWidth`.\n  if (windowScrollbarX <= 0) {\n    const doc = html.ownerDocument;\n    const body = doc.body;\n    const bodyStyles = getComputedStyle(body);\n    const bodyMarginInline = doc.compatMode === 'CSS1Compat' ? parseFloat(bodyStyles.marginLeft) + parseFloat(bodyStyles.marginRight) || 0 : 0;\n    const clippingStableScrollbarWidth = Math.abs(html.clientWidth - body.clientWidth - bodyMarginInline);\n    if (clippingStableScrollbarWidth <= SCROLLBAR_MAX) {\n      width -= clippingStableScrollbarWidth;\n    }\n  } else if (windowScrollbarX <= SCROLLBAR_MAX) {\n    // If the <body> scrollbar is on the left, the width needs to be extended\n    // by the scrollbar amount so there isn't extra space on the right.\n    width += windowScrollbarX;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst absoluteOrFixed = /*#__PURE__*/new Set(['absolute', 'fixed']);\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle$1(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle$1(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import{isContainingBlock as t}from\"@floating-ui/utils/dom\";function e(t){return i(t)}function n(t){return f(t,\"offsetTop\")}function o(t){return f(t,\"offsetLeft\")}function r(t){return t.assignedSlot?t.assignedSlot:t.parentNode instanceof ShadowRoot?t.parentNode.host:t.parentNode}function i(e){for(let t=e;t;t=r(t))if(t instanceof Element&&\"none\"===getComputedStyle(t).display)return null;for(let n=r(e);n;n=r(n)){if(!(n instanceof Element))continue;const e=getComputedStyle(n);if(\"contents\"!==e.display){if(\"static\"!==e.position||t(e))return n;if(\"BODY\"===n.tagName)return n}}return null}function f(t,e){let n=t[e],o=i(t);const r=function(t){const e=new Set;let n=t.getRootNode();for(;n;)e.add(n),n=n.parentNode?n.parentNode.getRootNode():null;return e}(t);for(;o&&!r.has(o.getRootNode());)n-=o[e],o=i(o);return n}export{o as offsetLeft,e as offsetParent,n as offsetTop};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { isServer } from \"lit\";\nimport { autoUpdate, computePosition, shift, hide, flip, offset, autoPlacement, arrow, platform } from \"@floating-ui/dom\";\nimport { debounce } from \"lodash-es\";\nimport { offsetParent } from \"composed-offset-position\";\nimport { D as DEBOUNCE } from \"./runtime.js\";\nimport { g as getElementDir } from \"./dom.js\";\n(function setUpFloatingUiForShadowDomPositioning() {\n  if (!isServer) {\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element) => originalGetOffsetParent(element, offsetParent);\n  }\n})();\nfunction roundByDPR(value) {\n  const dpr = window.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\nconst positionFloatingUI = (\n  /* we export arrow function to allow us to spy on it during testing */\n  async (component, {\n    referenceEl,\n    floatingEl,\n    overlayPositioning = \"absolute\",\n    placement,\n    flipDisabled,\n    flipPlacements: flipPlacements2,\n    offsetDistance,\n    offsetSkidding,\n    arrowEl,\n    type\n  }) => {\n    if (!referenceEl || !floatingEl) {\n      return;\n    }\n    const isRTL = getElementDir(floatingEl) === \"rtl\";\n    const {\n      x,\n      y,\n      placement: effectivePlacement,\n      strategy: position,\n      middlewareData\n    } = await computePosition(referenceEl, floatingEl, {\n      strategy: overlayPositioning,\n      placement: placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\" ? void 0 : getEffectivePlacement(placement, isRTL),\n      middleware: getMiddleware({\n        placement,\n        flipDisabled,\n        flipPlacements: flipPlacements2?.map((placement2) => getEffectivePlacement(placement2, isRTL)),\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type\n      })\n    });\n    if (arrowEl && middlewareData.arrow) {\n      const { x: x2, y: y2 } = middlewareData.arrow;\n      const side = effectivePlacement.split(\"-\")[0];\n      const alignment = x2 != null ? \"left\" : \"top\";\n      const transform = ARROW_CSS_TRANSFORM[side];\n      const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n      if (\"floatingLayout\" in component) {\n        component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n      }\n      Object.assign(arrowEl.style, {\n        ...reset,\n        [alignment]: `${alignment == \"left\" ? x2 : y2}px`,\n        [side]: \"100%\",\n        transform\n      });\n    }\n    const referenceHidden = middlewareData.hide?.referenceHidden;\n    const visibility = referenceHidden ? \"hidden\" : null;\n    const pointerEvents = visibility ? \"none\" : null;\n    floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n    Object.assign(floatingEl.style, {\n      pointerEvents,\n      position,\n      transform: `translate(${roundByDPR(x)}px,${roundByDPR(y)}px)`,\n      visibility\n    });\n  }\n);\nconst placementDataAttribute = \"data-placement\";\nconst flipPlacements = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n  \"leading\",\n  \"trailing\",\n  \"leading-start\",\n  \"leading-end\",\n  \"trailing-start\",\n  \"trailing-end\"\n];\nconst defaultMenuPlacement = \"bottom-start\";\nconst defaultEndMenuPlacement = \"bottom-end\";\nconst FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\"\n};\nfunction getMiddleware({\n  placement,\n  flipDisabled,\n  flipPlacements: flipPlacements2,\n  offsetDistance,\n  offsetSkidding,\n  arrowEl,\n  type\n}) {\n  const middleware = [shift(), hide()];\n  if (type === \"menu\") {\n    middleware.push(\n      flip({\n        fallbackPlacements: flipPlacements2 || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"]\n      })\n    );\n  }\n  middleware.push(\n    offset({\n      mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n      crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0\n    })\n  );\n  if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n    middleware.push(\n      autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null })\n    );\n  } else if (!flipDisabled) {\n    middleware.push(flip(flipPlacements2 ? { fallbackPlacements: flipPlacements2 } : {}));\n  }\n  if (arrowEl) {\n    middleware.push(\n      arrow({\n        element: arrowEl\n      })\n    );\n  }\n  return middleware;\n}\nfunction filterValidFlipPlacements(placements2, el) {\n  const filteredPlacements = placements2.filter(\n    (placement) => flipPlacements.includes(placement)\n  );\n  if (filteredPlacements.length !== placements2.length) {\n    console.warn(\n      `${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${flipPlacements.map((placement) => `\"${placement}\"`).join(\", \").trim()}`,\n      { el }\n    );\n  }\n  return filteredPlacements;\n}\nfunction getEffectivePlacement(placement, isRTL = false) {\n  const placements2 = [\"left\", \"right\"];\n  if (isRTL) {\n    placements2.reverse();\n  }\n  return placement.replace(/leading/gi, placements2[0]).replace(/trailing/gi, placements2[1]);\n}\nasync function reposition(component, options, delayed = false) {\n  if (!component.open || !options.floatingEl || !options.referenceEl) {\n    return;\n  }\n  Object.assign(options.floatingEl.style, {\n    display: \"block\",\n    // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n    position: options.overlayPositioning ?? \"absolute\"\n  });\n  const trackedState = autoUpdatingComponentMap.get(component);\n  if (!trackedState) {\n    return runAutoUpdate(component);\n  }\n  const positionFunction = delayed ? getDebouncedReposition(component) : positionFloatingUI;\n  await positionFunction(component, options);\n}\nfunction getDebouncedReposition(component) {\n  let debounced = componentToDebouncedRepositionMap.get(component);\n  if (debounced) {\n    return debounced;\n  }\n  debounced = debounce(positionFloatingUI, DEBOUNCE.reposition, {\n    leading: true,\n    maxWait: DEBOUNCE.reposition\n  });\n  componentToDebouncedRepositionMap.set(component, debounced);\n  return debounced;\n}\nconst ARROW_CSS_TRANSFORM = {\n  top: \"\",\n  left: \"rotate(-90deg)\",\n  bottom: \"rotate(180deg)\",\n  right: \"rotate(90deg)\"\n};\nconst autoUpdatingComponentMap = /* @__PURE__ */ new WeakMap();\nconst componentToDebouncedRepositionMap = /* @__PURE__ */ new WeakMap();\nasync function runAutoUpdate(component) {\n  const { referenceEl, floatingEl } = component;\n  if (!floatingEl.isConnected) {\n    return;\n  }\n  const effectiveAutoUpdate = !isServer ? autoUpdate : (_refEl, _floatingEl, updateCallback) => {\n    updateCallback();\n    return () => {\n    };\n  };\n  autoUpdatingComponentMap.set(component, { state: \"pending\" });\n  let repositionPromise;\n  const cleanUp = effectiveAutoUpdate(\n    referenceEl,\n    floatingEl,\n    // callback is invoked immediately\n    () => {\n      const promise = component.reposition();\n      if (!repositionPromise) {\n        repositionPromise = promise;\n      }\n    }\n  );\n  autoUpdatingComponentMap.set(component, { state: \"active\", cleanUp });\n  return repositionPromise;\n}\nfunction hideFloatingUI(component) {\n  const { floatingEl } = component;\n  if (!floatingEl) {\n    return;\n  }\n  Object.assign(floatingEl.style, {\n    display: \"\",\n    pointerEvents: \"\",\n    position: \"\",\n    transform: \"\",\n    visibility: \"\"\n  });\n}\nasync function connectFloatingUI(component) {\n  const { floatingEl, referenceEl } = component;\n  hideFloatingUI(component);\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  disconnectFloatingUI(component);\n  if (!component.open) {\n    return;\n  }\n  return runAutoUpdate(component);\n}\nfunction disconnectFloatingUI(component) {\n  const trackedState = autoUpdatingComponentMap.get(component);\n  if (trackedState?.state === \"active\") {\n    trackedState.cleanUp();\n  }\n  autoUpdatingComponentMap.delete(component);\n  componentToDebouncedRepositionMap.get(component)?.cancel();\n  componentToDebouncedRepositionMap.delete(component);\n}\nconst visiblePointerSize = 4;\nconst defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\nexport {\n  FloatingCSS as F,\n  disconnectFloatingUI as a,\n  defaultMenuPlacement as b,\n  connectFloatingUI as c,\n  defaultOffsetDistance as d,\n  defaultEndMenuPlacement as e,\n  filterValidFlipPlacements as f,\n  hideFloatingUI as h,\n  reposition as r\n};\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { w as whenTransitionDone } from \"./dom.js\";\nfunction isOpen(component) {\n  return component[component.openProp || \"open\"];\n}\nfunction onToggleOpenCloseComponent(component) {\n  requestAnimationFrame(() => {\n    if (!component.transitionEl) {\n      return;\n    }\n    whenTransitionDone(\n      component.transitionEl,\n      component.transitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      }\n    );\n  });\n}\nexport {\n  onToggleOpenCloseComponent as o\n};\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n"],"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","yAxisSides","Set","getSideAxis","has","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","replace","lrPlacement","rlPlacement","tbPlacement","btPlacement","getOppositeAxisPlacements","flipAlignment","direction","list","isStart","getSideList","map","getPaddingObject","padding","_objectSpread","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","originSides","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","invalidOverflowDisplayValues","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","tableElements","isTableElement","topLayerSelectors","isTopLayer","selector","matches","_e","transformProperties","willChangeValues","containValues","isContainingBlock","elementOrCss","webkit","isWebKit","css","containerType","backdropFilter","filter","willChange","includes","contain","CSS","supports","lastTraversableNodeNames","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","getComputedStyle$1","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getHTMLOffset","scroll","htmlRect","absoluteOrFixed","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","windowScrollbarX","doc","bodyStyles","bodyMarginInline","compatMode","marginLeft","marginRight","clippingStableScrollbarWidth","abs","getViewportRect","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","setLeftRTLScrollbarOffset","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","rectsAreEqual","a","b","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","elementRectForRootMargin","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","allowedPlacements","autoAlignment","detectOverflowOptions","_objectWithoutProperties","_excluded","placements$1","undefined","getPlacementList","currentIndex","index","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","slice","sort","resetPlacement","every","shift","_evaluate4","checkMainAxis","checkCrossAxis","limiter","_excluded4","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","enabled","flip","_middlewareData$flip","initialPlacement","_evaluate2","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","_excluded2","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","hide","_evaluate3","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition$1","e","t","r","n","tagName","roundByDPR","dpr","devicePixelRatio","isServer","originalGetOffsetParent","positionFloatingUI","component","_middlewareData$hide","floatingEl","overlayPositioning","flipDisabled","flipPlacements","flipPlacements2","offsetDistance","offsetSkidding","arrowEl","type","getElementDir","effectivePlacement","getEffectivePlacement","getMiddleware","placement2","x2","y2","transform","ARROW_CSS_TRANSFORM","floatingLayout","assign","style","visibility","pointerEvents","setAttribute","placementDataAttribute","defaultMenuPlacement","defaultEndMenuPlacement","FloatingCSS","animation","animationActive","_ref2","filterValidFlipPlacements","placements2","filteredPlacements","console","warn","join","trim","arguments","reverse","reposition","_options$overlayPosit","delayed","open","autoUpdatingComponentMap","runAutoUpdate","positionFunction","debounced","componentToDebouncedRepositionMap","debounce","DEBOUNCE","leading","maxWait","getDebouncedReposition","WeakMap","isConnected","effectiveAutoUpdate","_refEl","_floatingEl","updateCallback","repositionPromise","cleanUp","promise","hideFloatingUI","connectFloatingUI","disconnectFloatingUI","_componentToDebounced","trackedState","delete","cancel","defaultOffsetDistance","ceil","hypot","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","Symbol","toStringTag","isOwn","call","tag","unmasked","getRawTag","objectToString","Date","now","reWhitespace","string","charAt","reTrimStart","trimmedEndIndex","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isSymbol","isObject","other","valueOf","baseTrim","isBinary","nativeMax","nativeMin","func","wait","lastArgs","lastThis","timerId","lastCallTime","lastInvokeTime","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","isInvoking","leadingEdge","toNumber","flush","isObjectLike","baseGetTag","freeSelf","self","freeGlobal","Function","global","isOpen","openProp","onToggleOpenCloseComponent","transitionEl","whenTransitionDone","transitionProp","onBeforeOpen","onBeforeClose","onOpen","onClose","s","notifyChildrenConnectedChanged","_$AN","_i$_$AO","_$AO","o","_$AM","size","add","c","h","_$AH","isArray","_i$_$AP","_i$_$AQ","CHILD","_$AP","_$AQ","f","constructor","_$AT","super","_$AU","_this$reconnected","_this$disconnected","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","createRef","render","_i$options","G","rt","lt","ct","ht","_this$ht","globalThis","_o$get","_this$ht2","_this$G"],"sourceRoot":""}
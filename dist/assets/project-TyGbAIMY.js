import{a9 as l,dv as n,du as p,v as s,w as i,ad as h,x as S,aj as g,ds as y,eJ as w,ap as R,hU as v}from"./index-DFyW9aWf.js";let e=class extends l{constructor(o){super(o),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const o=this.geometries.map((a=>a.toJSON())),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:p(t),geometries:o}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({type:h,json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([S("esri.rest.support.ProjectParameters")],e);const j=g(e);async function F(o,t,r){t=j(t);const a=y(o),f={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,u=p(t.geometries[0]),c=w(f,r);return R(a.path+"/project",c).then((({data:{geometries:d}})=>v(d,u,m)))}export{F as n,e as p};

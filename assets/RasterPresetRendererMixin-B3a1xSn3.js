import{ds as B,eK as W,eJ as X,ap as d,bo as I,ad as Y,E as K,bq as N,a8 as _,a9 as G,v as n,w as o,ac as Q,fr as U,x as M}from"./index-Btgm0Mou.js";import{l as Z,m as ee}from"./RasterSymbolizer-DAxhF4cd.js";import{p as te,l as ae}from"./RasterJobHandlerMixin-AbvtbQ8G.js";async function P(t,a,p){const x=B(t),{rasterFunction:c,sourceJSON:j}=a||{},J=c?JSON.stringify(c.rasterFunctionDefinition||c):null,O=W({...x.query,renderingRule:J,f:"json"}),u=X(O,p);t=x.path;const e=j||await d(t,u).then((r=>r.data)),C=e.hasRasterAttributeTable?d(`${t}/rasterAttributeTable`,u):null,k=e.hasColormap?d(`${t}/colormap`,u):null,q=e.hasHistograms?d(`${t}/histograms`,u):null,z=e.currentVersion>=10.3?d(`${t}/keyProperties`,u):null,F=e.hasMultidimensions?d(`${t}/multidimensionalInfo`,u):null,i=await Promise.allSettled([C,k,q,z,F]);let f=null;if(e.minValues&&e.minValues.length===e.bandCount){f=[];for(let r=0;r<e.minValues.length;r++)f.push({min:e.minValues[r],max:e.maxValues[r],avg:e.meanValues[r],stddev:e.stdvValues[r]})}const R=I.fromJSON(e.extent),w=Math.ceil(R.width/e.pixelSizeX-.1),S=Math.ceil(R.height/e.pixelSizeY-.1),h=Y.fromJSON(e.spatialReference||e.extent.spatialReference),$=i[0].status==="fulfilled"?i[0].value?.data:null,H=$?.features?.length?K.fromJSON($):null,V=i[1].status==="fulfilled"?i[1].value?.data.colormap:null,E=V?.length?V:null,D=i[2].status==="fulfilled"?i[2].value?.data.histograms:null,L=D?.[0]?.counts?.length?D:null,m=i[3].status==="fulfilled"?i[3].value?.data??{}:{},T=i[4].status==="fulfilled"?i[4].value?.data.multidimensionalInfo:null,v=T?.variables?.length?T:null;v&&v.variables.forEach((r=>{r.statistics?.length&&r.statistics.forEach((s=>{s.avg=s.mean,s.stddev=s.standardDeviation})),r.dimensions?.forEach((s=>{s.name!=="StdTime"||s.recurring||s.unit||(s.unit="ISO8601")}))}));const{defaultVariable:y,serviceDataType:g}=e;y&&y!==m.DefaultVariable&&(m.DefaultVariable=y),g?.includes("esriImageServiceDataTypeVector")&&!g.includes(m.DataType)&&(m.DataType=g.replace("esriImageServiceDataType",""));let b=e.noDataValue;e.noDataValues?.length&&e.noDataValues.some((r=>r!==b))&&(b=e.noDataValues);const A=e.transposeInfo?new Z({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new N({x:e.extent.xmin,y:e.extent.ymax,spatialReference:h}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(w,S))/Math.LN2-8)),transposeInfo:e.transposeInfo}):void 0;return new ee({width:w,height:S,bandCount:e.bandCount,extent:I.fromJSON(e.extent),spatialReference:h,pixelSize:new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),pixelType:e.pixelType.toLowerCase(),statistics:f,attributeTable:H,colormap:E,histograms:L,keyProperties:m,noDataValue:b,multidimensionalInfo:v,storageInfo:A})}function ne(t,a,p){return P(t,{sourceJSON:a},p)}function le(t,a,p){return P(t,{rasterFunction:a},p)}function oe(t,a){t.attributeTable||(a.hasRasterAttributeTable=!1),t.histograms||(a.hasHistograms=!1),t.colormap||(a.hasColormap=!1),t.multidimensionalInfo||(a.hasMultidimensions=!1)}let l=class extends _.ClonableMixin(G){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};n([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"name",void 0),n([o({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),Q({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],l.prototype,"method",void 0),n([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"value",void 0),n([o({type:[U],json:{write:{isRequired:!0}}})],l.prototype,"bandIds",void 0),n([o({types:ae,json:{write:!0,origins:{"web-scene":{types:te,write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],l.prototype,"renderer",void 0),l=n([M("esri.renderers.support.RasterPresetRenderer")],l);const ue=t=>{let a=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return n([o({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],a.prototype,"activePresetRendererName",void 0),n([o({type:[l],json:{name:"layerDefinition.presetRenderers",write:!0}})],a.prototype,"presetRenderers",void 0),a=n([M("esri.layers.mixins.RasterPresetRendererMixin")],a),a};export{oe as c,ne as f,ue as o,le as p};

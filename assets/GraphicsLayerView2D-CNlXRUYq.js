import{L as m,M as c,N as g,V as n,O as l,k as h,l as d,v as o,w,x as u}from"./index-DDVYhT7_.js";import{S as y,u as V}from"./LayerView-D5vI-4en.js";import{t as v}from"./GraphicContainer-D2O35uqO.js";import{O as f}from"./GraphicsView2D-C7TlPezO.js";import"./Container-CiD1tEvC.js";import"./layerViewUtils-CgrKZj45.js";import"./AGraphicContainer-BwIygMVZ.js";import"./TechniqueInstance-CktMRhlw.js";import"./UpdateTracking2D-HxCiV06J.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-dUf1beFm.js";import"./rasterizingUtils-C4jZl52-.js";import"./floatRGBA-CeNf5wej.js";import"./Rect-CUzevAry.js";import"./Utils-D1OCrAlb.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-ChdByd9B.js";import"./ProgramTemplate-CVdkXfNz.js";import"./TileContainer-CeWp5BiQ.js";import"./WGLContainer-CP148BWa.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-B8FvzoH1.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-svwkFU3J.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-CPUbIldW.js";import"./ShaderBuilder-BQu8iFA3.js";import"./BindType-BBwFZqyN.js";import"./utils-ClFJxstx.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DHUGSNq1.js";import"./OverrideHelper-B22zWLG8.js";import"./colorUtils-D2hPcYjo.js";import"./quantizationUtils-DSH-kk7o.js";import"./AttributeStore-DfvXhnfw.js";import"./queryUtils-DZIHLN6o.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DBS_43ML.js";import"./normalizeUtilsSync-CJOAxfGU.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-B14Cp-m7.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m((()=>this.layer?.visible),(()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()}))]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map((s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer}))):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map((r=>r&&r.uid)):n.isCollection(i)&&i.length>0&&(t=i.map((r=>r&&r.uid)).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h((()=>!this.destroyed&&this._removeHighlights(p,a)))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const ci=e;export{ci as default};

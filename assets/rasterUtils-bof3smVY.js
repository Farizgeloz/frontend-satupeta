import{P as w,Q as m,X as h,R as c,S as T,T as d,U as g}from"./index-D-NAnen2.js";function F(l,n,a="nearest",e=!1){const o=!(e&&n.pixelType==="u8"),r=o?h.FLOAT:h.UNSIGNED_BYTE,A=n.pixels==null||n.pixels.length===0?null:o?n.getAsRGBAFloat():n.getAsRGBA(),E=l.capabilities.textureFloatLinear,t=new w;return t.width=n.width,t.height=n.height,t.internalFormat=o?m.RGBA32F:g.RGBA,t.samplingMode=!E||a!=="bilinear"&&a!=="cubic"?c.NEAREST:c.LINEAR,t.dataType=r,t.wrapMode=T.CLAMP_TO_EDGE,new d(l,t,A)}function G(l,n){const{spacing:a,offsets:e,coefficients:o,size:[r,A]}=n,E=a[0]>1,t=new w;t.width=E?4*r:r,t.height=A,t.internalFormat=m.RGBA32F,t.dataType=h.FLOAT,t.samplingMode=c.NEAREST,t.wrapMode=T.CLAMP_TO_EDGE;const p=new Float32Array(E?r*A*16:2*e.length);if(E&&o!=null)for(let i=0,s=0;i<o.length;i++)p[s++]=o[i],i%3==2&&(p[s++]=1);else for(let i=0;i<A;i++)for(let s=0;s<r;s++){const f=4*(i*r+s),u=2*(s*A+i);p[f]=e[u],p[f+1]=e[u+1],p[f+3]=e[u]===-1?0:1}return new d(l,t,p)}function R(l,n){const a=new w;return a.internalFormat=g.RGBA,a.width=n.length/4,a.height=1,a.samplingMode=c.NEAREST,a.wrapMode=T.CLAMP_TO_EDGE,new d(l,a,n)}function _(l,n,a){const e=new w;return e.internalFormat=g.ALPHA,e.pixelFormat=g.ALPHA,e.dataType=h.UNSIGNED_BYTE,e.width=a[0],e.height=a[1],e.samplingMode=c.NEAREST,e.wrapMode=T.CLAMP_TO_EDGE,new d(l,e,n)}export{_ as c,R as l,G as m,F as s};

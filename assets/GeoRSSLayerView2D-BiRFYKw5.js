import{y as l,B as h,E as g,V as w,F as f,J as u,K as n,v as d,x as V}from"./index-DDVYhT7_.js";import{S as b,u as S}from"./LayerView-D5vI-4en.js";import{t as _}from"./GraphicContainer-D2O35uqO.js";import{O as T}from"./GraphicsView2D-C7TlPezO.js";import"./Container-CiD1tEvC.js";import"./layerViewUtils-CgrKZj45.js";import"./AGraphicContainer-BwIygMVZ.js";import"./TechniqueInstance-CktMRhlw.js";import"./UpdateTracking2D-HxCiV06J.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-dUf1beFm.js";import"./rasterizingUtils-C4jZl52-.js";import"./floatRGBA-CeNf5wej.js";import"./Rect-CUzevAry.js";import"./Utils-D1OCrAlb.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-ChdByd9B.js";import"./ProgramTemplate-CVdkXfNz.js";import"./TileContainer-CeWp5BiQ.js";import"./WGLContainer-CP148BWa.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-B8FvzoH1.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-svwkFU3J.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-CPUbIldW.js";import"./ShaderBuilder-BQu8iFA3.js";import"./BindType-BBwFZqyN.js";import"./utils-ClFJxstx.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DHUGSNq1.js";import"./OverrideHelper-B22zWLG8.js";import"./colorUtils-D2hPcYjo.js";import"./quantizationUtils-DSH-kk7o.js";import"./AttributeStore-DfvXhnfw.js";import"./queryUtils-DZIHLN6o.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DBS_43ML.js";import"./normalizeUtilsSync-CJOAxfGU.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-B14Cp-m7.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap((i=>{const t=this._popupTemplates.get(i),s=i.hitTest(e);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=t;return s})).map((i=>({type:"graphic",graphic:i,layer:o,mapPoint:e})))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([l((()=>this.layer?.featureCollections),(e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:i}of e){const t=g.fromJSON(o),s=new w(t.features),p=i.drawingInfo,c=r?f.fromJSON(r):null,a=u(p.renderer),m=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=m,this._popupTemplates.set(m,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}}),h),l((()=>this.layer?.polygonSymbol),(e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})}),h),l((()=>this.layer?.lineSymbol),(e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})}),h),l((()=>this.layer?.pointSymbol),(e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})}),h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=d([V("esri.views.2d.layers.GeoRSSLayerView2D")],y);const ce=y;export{ce as default};

import{gs as t,gt as n,aU as d,ad as p}from"./index-DDVYhT7_.js";import{hydratedAdapter as i}from"./hydrated-DxUz38dv.js";function a(e){const r=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return r?d(p,r):p.WGS84}function h(e){return t.extendedSpatialReferenceInfo(e)}function w(e,r){return n(e),t.clip(i,a(e),e,r)}function R(e,r){return n(e),t.cut(i,a(e),e,r)}function x(e,r){return n(e),n(r),t.contains(i,a(e),e,r)}function S(e,r){return n(e),n(r),t.crosses(i,a(e),e,r)}function y(e,r,s){return n(e),n(r),t.distance(i,a(e),e,r,s)}function A(e,r){return n(e),n(r),t.equals(i,a(e),e,r)}function D(e,r){return n(e),n(r),t.intersects(i,a(e),e,r)}function L(e,r){return n(e),n(r),t.touches(i,a(e),e,r)}function T(e,r){return n(e),n(r),t.within(i,a(e),e,r)}function V(e,r){return n(e),n(r),t.disjoint(i,a(e),e,r)}function v(e,r){return n(e),n(r),t.overlaps(i,a(e),e,r)}function z(e,r,s){return n(e),n(r),t.relate(i,a(e),e,r,s)}function H(e){return n(e),t.isSimple(i,a(e),e)}function I(e){return n(e),t.simplify(i,a(e),e)}function J(e,r=!1){return t.convexHull(i,a(e),e,r)}function N(e,r){return n(r),t.difference(i,a(e),e,r)}function O(e,r){return n(r),t.symmetricDifference(i,a(e),e,r)}function b(e,r){return n(r),t.intersect(i,a(e),e,r)}function j(e){return t.union(i,a(e),e)}function q(e,r,s,c,o,f){return t.offset(i,a(e),e,r,s,c,o,f)}function B(e,r,s,c=!1){return t.buffer(i,a(e),e,r,s,c)}function C(e,r,s,c,o,f){return t.geodesicBuffer(i,a(e),e,r,s,c,o,f)}function E(e,r,s=!0){return n(e),t.nearestCoordinate(i,a(e),e,r,s)}function P(e,r){return n(e),t.nearestVertex(i,a(e),e,r)}function G(e,r,s,c){return n(e),t.nearestVertices(i,a(e),e,r,s,c)}function l(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function W(e,r,s){if(e==null)throw new u;const c=e.spatialReference;if((s=s??l(e))==null)throw new u;const o=e.constructor.fromJSON(t.rotate(e,r,s));return o.spatialReference=c,o}function k(e,r){if(e==null)throw new u;const s=e.spatialReference;if((r=r??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.flipHorizontal(e,r));return c.spatialReference=s,c}function F(e,r){if(e==null)throw new u;const s=e.spatialReference;if((r=r??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.flipVertical(e,r));return c.spatialReference=s,c}function K(e,r,s,c){return n(e),t.generalize(i,a(e),e,r,s,c)}function M(e,r,s){return n(e),t.densify(i,a(e),e,r,s)}function U(e,r,s,c=0){return n(e),t.geodesicDensify(i,a(e),e,r,s,c)}function Q(e,r){return n(e),t.planarArea(i,a(e),e,r)}function X(e,r){return n(e),t.planarLength(i,a(e),e,r)}function Y(e,r,s){return n(e),t.geodesicArea(i,a(e),e,r,s)}function Z(e,r,s){return n(e),t.geodesicLength(i,a(e),e,r,s)}function _(e,r){return t.intersectLinesToPoints(i,a(e),e,r)}function $(e,r){t.changeDefaultSpatialReferenceTolerance(e,r)}function ee(e){t.clearDefaultSpatialReferenceTolerance(e)}class u extends Error{constructor(){super("Illegal Argument Exception")}}export{B as buffer,$ as changeDefaultSpatialReferenceTolerance,ee as clearDefaultSpatialReferenceTolerance,w as clip,x as contains,J as convexHull,S as crosses,R as cut,M as densify,N as difference,V as disjoint,y as distance,A as equals,h as extendedSpatialReferenceInfo,k as flipHorizontal,F as flipVertical,K as generalize,Y as geodesicArea,C as geodesicBuffer,U as geodesicDensify,Z as geodesicLength,b as intersect,_ as intersectLinesToPoints,D as intersects,H as isSimple,E as nearestCoordinate,P as nearestVertex,G as nearestVertices,q as offset,v as overlaps,Q as planarArea,X as planarLength,z as relate,W as rotate,I as simplify,O as symmetricDifference,L as touches,j as union,T as within};

import{L as m,M as c,N as g,V as n,O as l,k as h,l as d,v as o,w,x as u}from"./index-C7gprX8c.js";import{S as y,u as V}from"./LayerView-Dc692m8k.js";import{t as v}from"./GraphicContainer-Dv0h45iE.js";import{O as f}from"./GraphicsView2D-DG_VS7_A.js";import"./Container-BmIJS6v2.js";import"./layerViewUtils-CCPAZxRC.js";import"./AGraphicContainer-BbpklMsH.js";import"./TechniqueInstance-DGL67mQP.js";import"./UpdateTracking2D-C8o1WMr1.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-fj_8CoOg.js";import"./rasterizingUtils-BgyVD6JM.js";import"./floatRGBA-2wA5SycS.js";import"./Rect-CUzevAry.js";import"./Utils-0q5j-FqI.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-DERB8BEf.js";import"./ProgramTemplate-tDrqCud_.js";import"./TileContainer-CL-uIyhT.js";import"./WGLContainer-15FmmtnQ.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-D30v9ZyK.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-DEe7yVmx.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-Kxn4hl38.js";import"./ShaderBuilder-DEY4CMNk.js";import"./BindType-BBwFZqyN.js";import"./utils-Cx9sbZsN.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CIXeZ9V5.js";import"./OverrideHelper-sUcOGcwP.js";import"./colorUtils-jgERy-2a.js";import"./quantizationUtils-Cx82a7bC.js";import"./AttributeStore-DhzAoWXn.js";import"./queryUtils-BrqSFmps.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CFj4PC5l.js";import"./normalizeUtilsSync-C5P5pK25.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BRKtgcCt.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m((()=>this.layer?.visible),(()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()}))]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map((s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer}))):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map((r=>r&&r.uid)):n.isCollection(i)&&i.length>0&&(t=i.map((r=>r&&r.uid)).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h((()=>!this.destroyed&&this._removeHighlights(p,a)))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const ci=e;export{ci as default};

import{bx as z,bf as C,ad as G,dE as O,aZ as R,bq as A,dF as Y,dG as v,dH as D,s as U,dI as S}from"./index-C7gprX8c.js";import{j as V}from"./quantizationUtils-Cx82a7bC.js";import{$ as _}from"./utils-BD--rkd_.js";import{m as E,B as q}from"./utils-g3M7hY78.js";let c=null;const L=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function P(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function X(e,t,n,i){const r=O(n)?R(n):null,o=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map((a=>{const l=new A(a.geometry);return V(t,l,l),a.geometry=r?P(l,o??0,i[0]):l,a}))}function ee(e,t=18,n,i,r){const o=new Float64Array(i*r);t=Math.round(S(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const $=Y(n);for(const{geometry:p,attributes:F}of e){const{x:g,y:f}=p,w=Math.max(0,g-t),N=Math.max(0,f-t),M=Math.min(r,f+t),x=Math.min(i,g+t),h=+$(F);for(let d=N;d<M;d++)for(let m=w;m<x;m++){const b=d*i+m,I=D(m-g,d-f,t)*h,u=o[b]+=I;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function Z(e){const t=L.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(o||0)}async function te(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:o,fieldDelimiter:a,fieldInfos:l,timeZone:$}=e,p=i&&l?.find((u=>u.name.toLowerCase()===i.toLowerCase())),F=!!p&&z(p),g=!!p&&_(p),f=e.valueExpression,w=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,x=[],h=e.viewInfoParams;let d=null,m=null;if(f){if(!c){const{arcadeUtils:u}=await C();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),d=c.createFunction(f),m=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new G(h.spatialReference)}):null}const b=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&b?{fields:b}:null;return t.forEach((u=>{const y=u.attributes;let s;if(f){const T=I?{...u,layer:I}:u,j=c.createExecContext(T,m,$);s=c.executeFunction(d,j)}else y&&(s=y[i],r?(s=`${E(s)}${a}${E(y[r])}`,o&&(s=`${s}${a}${E(y[o])}`)):typeof s=="string"&&n&&(g?s=s?new Date(s).getTime():null:F&&(s=s?Z(s):null)));if(w&&typeof s=="number"&&isFinite(s)){const T=y&&parseFloat(y[N]);s=q(s,w,T,M)}x.push(s)})),x}function ne(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ie(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let o="";return o=i&&r?k(i,r):i||r,o?"("+o+")":""}function k(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function re(e,t){if(e&&e.spatialRelationship!=="intersects")return new U(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function se(e,t,n){const i=B({layer:e,fields:t});if(i.length)return new U(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=H({layer:e,fields:t});return r.length?new U(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function B(e){const t=e.layer;return e.fields.filter((n=>!t.getField(n)))}function H(e){const t=e.layer;return e.fields.filter((n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics}))}export{ne as F,Z as I,re as M,ie as N,se as T,k as U,te as b,ee as w,X as x};

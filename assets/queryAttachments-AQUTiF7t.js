import{dp as m,ap as i,dq as p,dr as f}from"./index-DFyW9aWf.js";import{d as l}from"./AttachmentInfo-CzHv-R6W.js";function y(s){const t=s.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t}function b(s,t){const e={};for(const o of t){const{parentObjectId:a,parentGlobalId:n,attachmentInfos:c}=o;for(const r of c){const{id:u}=r,h=p(f(`${s.path}/${a}/attachments/${u}`)),d=l.fromJSON(r);d.set({url:h,parentObjectId:a,parentGlobalId:n}),e[a]?e[a].push(d):e[a]=[d]}}return e}function q(s,t,e){let o={query:m({...s.query,f:"json",...y(t)})};return e&&(o={...e,...o,query:{...e.query,...o.query}}),i(s.path+"/queryAttachments",o).then((a=>a.data.attachmentGroups))}async function O(s,t,e){const{objectIds:o}=t,a=[];for(const n of o)a.push(i(s.path+"/"+n+"/attachments",e));return Promise.all(a).then((n=>o.map(((c,r)=>({parentObjectId:c,attachmentInfos:n[r].data.attachmentInfos})))))}export{q as executeAttachmentQuery,O as fetchAttachments,b as processAttachmentQueryResult};
